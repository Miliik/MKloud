
name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-code-check:
    name: 'Terraform Format & Validate'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true  # <- don't stop workflow immediately

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Comment success if Format passes
        if: steps.fmt.outcome == 'success' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: "✅ Terraform format check passed! 🎉"
            })

      - name: Comment failure if Format fails
        if: steps.fmt.outcome == 'failure' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: "🚨 **Terraform format check failed!**\n\nPlease run `terraform fmt -recursive` locally and commit the changes."
            })

      - name: Fail workflow if Format fails
        if: steps.fmt.outcome == 'failure'
        run: exit 1

  terraform-security-check:
    name: 'Terraform Security Scan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - name: Run tfsec Scan
        id: tfsec
        run: tfsec .
        continue-on-error: true  # <- don't stop workflow immediately

      - name: Comment failure if TFSec fails
        if: steps.tfsec.outcome == 'failure' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: "⚠️ **TFSec security scan failed!**\n\nPlease run `tfsec .` locally and fix the issues reported."
            })

      - name: Fail workflow if TFSec fails
        if: steps.tfsec.outcome == 'failure'
        run: exit 1
