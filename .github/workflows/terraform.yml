name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-code-check:
    name: 'Terraform Format & Validate'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Format Check
      id: fmt
      run: |
        terraform fmt -check -recursive || echo "fmt_failed=true" >> $GITHUB_ENV
        if [ "${{ env.fmt_failed }}" != "true" ]; then
          echo "‚úÖ Format check passed!"
          echo '  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†∏‚°á‚†Ä‚†ø‚°Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°¥‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚£†‚†æ‚†Å‚£Ä‚£Ñ‚°à‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°Ä‚†Å‚†Ä‚†Ä‚†à‚†ô‚†õ‚†Ç‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚°ø‚¢ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚£Å‚£Ä‚†Ä‚†¥‚†Ç‚†ô‚£ó‚°Ä‚†Ä‚¢ª‚£ø‚£ø‚†≠‚¢§‚£¥‚£¶‚£§‚£π‚†Ä‚†Ä‚†Ä‚¢Ä‚¢¥‚£∂‚£Ü 
        ‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£∑‚£Æ‚£Ω‚£æ‚£ø‚£•‚£¥‚£ø‚£ø‚°ø‚¢Ç‚†î‚¢ö‚°ø‚¢ø‚£ø‚£¶‚£¥‚£æ‚†Å‚†∏‚£º‚°ø 
        ‚†Ä‚¢Ä‚°û‚†Å‚†ô‚†ª‚†ø‚†ü‚†â‚†Ä‚†õ‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£å‚¢§‚£º‚£ø‚£æ‚£ø‚°ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚£æ‚£∑‚£∂‚†á‚†Ä‚†Ä‚£§‚£Ñ‚£Ä‚°Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†â‚†à‚†â‚†Ä‚†Ä‚¢¶‚°à‚¢ª‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£§‚£Ω‚°π‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†≤‚£Ω‚°ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ú‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£∑‚£∂‚£Æ‚£≠‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä 
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†ª‚†ø‚†ø‚†ø‚†ø‚†õ‚†â
          '
        fi

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Comment on PR if Format Check Fails
      if: env.fmt_failed == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            body: "üö® **Terraform format check failed!**\n\nPlease run `terraform fmt -recursive` locally and commit the changes."
          })

  terraform-security-check:
    name: 'Terraform Security Scan'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install tfsec
      run: |
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

    - name: Run tfsec Scan
      id: tfsec
      run:  |
        tfsec --soft-fail=false . || echo "tfsec_failed=true" >> $GITHUB_ENV


    - name: Comment on PR if TFSec Fails
      if: env.tfsec_failed == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            body: "‚ö†Ô∏è **TFSec security scan doesn't pass!**\n\nPlease run `tfsec .` locally and fix the reported issues."
          })
